/* Dropdown styling start */
.dropbtn {

  background-color: rgb(84, 178, 150);
  color: black;
  padding: 10px;
  font-size: 20px;
  border: none;
}

.dropdown {
  position: relative;
  display: inline-block;
}

.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f1f1f1;
  min-width: 160px;
  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
  z-index: 1;
}

.dropdown-content a {
  color: black;
  padding: 10px 15px;
  text-decoration: none;
  display: block;
}

.dropdown-content a:hover {
  background-color: rgb(60, 125, 106);
}

.dropdown:hover .dropdown-content {
  display: block;
}

.dropdown:hover .dropbtn {
  background-color: rgb(60, 125, 106);
}

/* Dropdown styling end */

/* changing style of create button */
.button {
  background-color: rgb(84, 178, 150);
  border: none;
  color: black;
  padding: 10px 15px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 20px;
  margin: 4px 2px;
  cursor: pointer;
}

/*page styling start*/
/* Centered heading and background styling */
.center {
  color: whitesmoke;
  text-align: center;
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

.large-heading {
  font-size: 35px;
}

.large-paragraph {
  font-size: 25px;
}

body {
  background-color: #43215a;
  font-family: Arial, sans-serif;
}

/*page styling end*/

/*popup styling start*/
/* The popup form - hidden by default 
    this sets the location of the popup on the screen*/
.form-popup {
  display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 80%;
    max-height: 80%;
    border: 3px solid #f1f1f1;
    z-index: 9;
    transform: translate(-50%, -50%);
    overflow: auto;
}

/* Add styles to the form container */
/* this is the actual popup window*/
.form-container {
  max-width: 300x;
  padding: 10px;
  background-color: white;
  box-sizing: border-box; /* Ensure padding is included in the width */
}

/* Full-width input fields */
/* styling of textboxes in the popup*/
.form-container input[type=text],
.form-container input[type=password] {
  width: 90%;
  padding: 15px;
  margin: 5px 0 22px 0;
  border: none;
  background: lightgrey;
}

/* When the inputs get focus, do something */
/* styling of when user is typing in the textbox*/
.form-container input[type=text]:focus,
.form-container input[type=password]:focus {
  background-color: #ddd;
  outline: none;
}

/* Set a style for the submit/login button */
/* formatting for login and cancel buttons*/
.form-container .btn {
  background-color: #04AA6D;
  color: white;
  padding: 16px 20px;
  border: none;
  cursor: pointer;
  width: 100%;
  margin-bottom: 10px;
  opacity: 0.8;
}

/* Add a red background color to the cancel button */
/* overrides color for cancel button
uses all other formatting*/
.form-container .cancel {
  background-color: red;
}

/* Add some hover effects to login and cancel buttons */
.form-container .btn:hover,
.open-button:hover {
  opacity: 1;
}

/*popup styling end*/

/*checkbox styling start*/
/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  cursor: pointer;
  font-size: 20px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: fixed;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: rgb(84, 178, 150);
}

/* On mouse-over, add a grey background color */
.container:hover input~.checkmark {
  background-color: rgb(60, 125, 106);
}

/* When the checkbox is checked, add a blue background */
.container input:checked~.checkmark {
  background-color: rgb(84, 178, 150);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked~.checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/*checkbox styling end*/

/*radio styling start*/
/* The container */
.r_container {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.r_container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.r_checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.r_container:hover input~.checkmark {
  background-color: rgb(60, 125, 106);
}

/* When the radio button is checked, add a blue background */
.r_container input:checked~.checkmark {
  background-color: rgb(84, 178, 150);
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.r_checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.r_container input:checked~.checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.r_container .checkmark:after {
  top: 9px;
  left: 9px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

/*radio styling end*/

/*box styling*/
.box {
  background-color: rgb(84, 178, 150);
  text-decoration: none;
  display: inline-block;
  font-size: 20px;
  margin: 4px 2px;
  color: black;
}

/* Larger submit button */
input[type="submit"] {
  background-color: rgb(84, 178, 150);
  color: black;
  font-size: 20px;
  padding: 10px 20px;
}